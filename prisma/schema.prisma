generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  deviceId String @unique
  username String? @unique
  password String?

  email String?

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at")

  plants            Plant[]
  userSettings      UserSettings?
  VerificationCodes VerificationCodes[]

  @@map("users")
}

model Plant {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  name        String
  description String?
  imageSrc    String?   @map("image_src")
  color       String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at")

  user        User         @relation(fields: [userId], references: [id])
  watering    Watering[]
  attachments Attachment[]
  reminders   Reminder[]

  // "GardenID"?
  @@map("plants")
}

model Watering {
  id        String   @id @default(uuid())
  plantId   String   @map("plant_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  plant Plant @relation(fields: [plantId], references: [id])

  @@map("waterings")
}

model Attachment {
  id             String         @id @default(uuid())
  plantId        String         @map("plant_id")
  url            String
  attachmentType AttachmentType @map("attachment_type")

  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at")

  plant Plant @relation(fields: [plantId], references: [id])

  @@map("attachments")
}

model Reminder {
  id            String       @id @default(uuid())
  plantId       String       @unique @map("plant_id")
  frequencyDays Int          @map("frequency_days")
  reminderType  ReminderType @map("reminder_type")
  notified      Boolean      @default(false)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  plant Plant @relation(fields: [plantId], references: [id])

  @@map("reminders")
}

model UserSettings {
  id                       String  @id @default(uuid())
  userId                   String  @unique @map("user_id")
  pushNotificationsEnabled Boolean @default(true) @map("push_notifications_enabled")

  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  user User @relation(fields: [userId], references: [id])

  @@map("user_settings")
}

model VerificationCodes {
  id     String @id @default(uuid())
  userId String @map("user_id")

  type   VerificationType
  code   String
  active Boolean          @default(true)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  user User @relation(fields: [userId], references: [id])

  @@map("verification_codes")
}

enum AttachmentType {
  plant_picture
}

enum ReminderType {
  plant_watering
}

enum VerificationType {
  EMAIL_CONFIRMATION
}
